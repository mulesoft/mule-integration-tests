<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
      xmlns:db="http://www.mulesoft.org/schema/mule/db"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:subtypes="http://www.mulesoft.org/schema/mule/subtypes"
      xmlns:websocket="http://www.mulesoft.org/schema/mule/websocket"
      xmlns:heisenberg="http://www.mulesoft.org/schema/mule/heisenberg"
      xmlns:aggregators="http://www.mulesoft.org/schema/mule/aggregators"
      xmlns:oauth="http://www.mulesoft.org/schema/mule/oauth"
      xmlns:petstore="http://www.mulesoft.org/schema/mule/petstore"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/websocket http://www.mulesoft.org/schema/mule/http/current/mule-websocket.xsd
        http://www.mulesoft.org/schema/mule/subtypes http://www.mulesoft.org/schema/mule/subtypes/current/mule-subtypes.xsd
        http://www.mulesoft.org/schema/mule/aggregators http://www.mulesoft.org/schema/mule/aggregators/current/mule-aggregators.xsd
        http://www.mulesoft.org/schema/mule/oauth http://www.mulesoft.org/schema/mule/oauth/current/mule-oauth.xsd
        http://www.mulesoft.org/schema/mule/heisenberg http://www.mulesoft.org/schema/mule/heisenberg/current/mule-heisenberg.xsd
        http://www.mulesoft.org/schema/mule/petstore http://www.mulesoft.org/schema/mule/petstore/current/mule-petstore.xsd">

    <oauth:token-manager-config name="tokenManagerConfig"/>

    <http:request-config name="httpRequestConfigWithOAuthProxyInline">
        <http:request-connection host="localhost" port="8081">
            <http:authentication>
                <oauth:client-credentials-grant-type
                        clientId="client-id"
                        clientSecret="client-secret"
                        tokenManager="tokenManagerConfig"
                        scopes="scopes"
                        tokenUrl="token-url"
                        refreshTokenWhen="#[attributes.statusCode == 500]"
                        responseAccessToken="#[payload['access_token']]"
                        responseExpiresIn="#[payload['expires_in']]">
                    <oauth:proxy-config>
                        <http:proxy name="proxyConfig" host="localhost" port="8083" />
                    </oauth:proxy-config>
                </oauth:client-credentials-grant-type>
            </http:authentication>
        </http:request-connection>
    </http:request-config>

    <tls:context name="listenerTlsContext">
        <tls:key-store path="serverKeystore" keyPassword="mulepassword" password="mulepassword" alias="muleserver"/>
    </tls:context>

    <http:listener-config name="HTTP_Listener_config" basePath="/api">
        <http:listener-connection host="localhost" port="8080" tlsContext="listenerTlsContext"
                                  protocol="HTTPS"/>
        <http:listener-interceptors>
            <http:cors-interceptor allowCredentials="true">
                <http:origins>
                    <http:origin url="http://www.the-origin-of-time.com" accessControlMaxAge="30">
                        <http:allowed-methods>
                            <http:method methodName="POST"/>
                            <http:method methodName="PUT"/>
                            <http:method methodName="GET"/>
                        </http:allowed-methods>
                        <http:allowed-headers>
                            <http:header headerName="x-allow-origin"/>
                            <http:header headerName="x-yet-another-valid-header"/>
                        </http:allowed-headers>
                        <http:expose-headers>
                            <http:header headerName="x-forwarded-for"/>
                        </http:expose-headers>
                    </http:origin>
                    <http:origin url="http://www.the-origin-of-life.com" accessControlMaxAge="60">
                        <http:allowed-methods>
                            <http:method methodName="POST"/>
                            <http:method methodName="GET"/>
                        </http:allowed-methods>
                        <http:allowed-headers>
                            <http:header headerName="x-allow-origin"/>
                        </http:allowed-headers>
                        <http:expose-headers>
                            <http:header headerName="x-forwarded-for"/>
                        </http:expose-headers>
                    </http:origin>
                </http:origins>
            </http:cors-interceptor>
        </http:listener-interceptors>
    </http:listener-config>

    <db:config name="dbConfig">
        <db:derby-connection create="true" database="target/muleEmbeddedDB">
            <db:pooling-profile maxPoolSize="10" maxWaitUnit="">
                <db:additional-properties/>
            </db:pooling-profile>
            <db:connection-properties>
                <db:connection-property key="first" value="propertyOne"/>
                <db:connection-property key="second" value="propertyTwo"/>
            </db:connection-properties>
        </db:derby-connection>
    </db:config>

    <http:listener-config name="defaultHttpListenerConfig" basePath="/api">
        <http:listener-connection host="localhost" port="8081" />
    </http:listener-config>

    <http:request-config name="clientGlobalConfig">
        <http:request-connection protocol="HTTPS" host="localhost" port="8082">
            <tls:context >
                <tls:trust-store path="tls/ssltest-cacerts.jks" password="changeit"/>
                <tls:key-store path="tls/ssltest-keystore.jks" keyPassword="changeit" password="changeit"/>
            </tls:context>
        </http:request-connection>
    </http:request-config>

    <flow name="defaultParametersFlow">
        <http:listener name="listener" config-ref="defaultHttpListenerConfig" path="/run"/>
        <http:request config-ref="clientGlobalConfig" path="/" method="GET"/>
    </flow>

    <flow name="withInfrastructureParametersFlow">
        <http:listener config-ref="defaultHttpListenerConfig" path="/runInfra" primaryNodeOnly="true">
			<redelivery-policy maxRedeliveryCount="4" idExpression="#[payload.id]"/>
			<non-repeatable-stream />
			<reconnect />
        </http:listener>
        <http:request config-ref="clientGlobalConfig" path="/" method="GET" target="response" targetValue="#[payload.body]">
            <error-mapping sourceType="HTTP:SECURITY" targetType="APP:GET_OUT" />
            <non-repeatable-stream />
            <reconnect frequency="3000" count="3" />
        </http:request>
    </flow>

    <flow name="defaultContentAggregatorFlow">
        <aggregators:time-based-aggregator name="defaultContentAggregator" period="1"/>
    </flow>

    <flow name="payloadContentAggregatorFlow">
        <aggregators:time-based-aggregator name="payloadContentAggregator" period="10" periodUnit="SECONDS">
            <aggregators:content>
                #[payload]
            </aggregators:content>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="customContentAggregatorFlow">
        <aggregators:time-based-aggregator name="customContentAggregator" period="20" periodUnit="MINUTES">
            <aggregators:content>
                #[message]
            </aggregators:content>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="flowParameters" initialState="stopped" maxConcurrency="2"/>

    <heisenberg:config name="heisenberg"
                       cancer="true"
                       dateOfBirth="1959-09-07T00:00:00"
                       dateOfDeath="2011-09-07T00:00:00-05:00"
                       dateOfConception="1959-01-07T00:00:00"
                       money="1000000"
                       finalHealth="DEAD"
                       labAddress="Pollos Hermanos">
        <heisenberg:enemies>
            <heisenberg:enemy value="Gustavo Fring"/>
            <heisenberg:enemy value="Hank"/>
        </heisenberg:enemies>
        <heisenberg:recipes>
            <heisenberg:recipe key="methylamine" value="75"/>
            <heisenberg:recipe key="pseudoephedrine" value="0"/>
            <heisenberg:recipe key="P2P" value="25"/>
        </heisenberg:recipes>
        <heisenberg:deaths-by-seasons>
            <heisenberg:deaths-by-season key="s01">
                <heisenberg:deaths-by-season-item value="emilio"/>
                <heisenberg:deaths-by-season-item value="domingo"/>
            </heisenberg:deaths-by-season>
        </heisenberg:deaths-by-seasons>
        <heisenberg:weapon-value-maps>
            <heisenberg:weapon-value-map key="first">
                <heisenberg:ricin microgramsPerKilo="22">
                    <heisenberg:destination victim="Lidia" address="Stevia coffe shop"/>
                </heisenberg:ricin>
            </heisenberg:weapon-value-map>
            <heisenberg:weapon-value-map key="second">
                <subtypes:revolver name="sledgeHammer's" bullets="1"/>
            </heisenberg:weapon-value-map>
        </heisenberg:weapon-value-maps>
        <heisenberg:labeled-ricins>
            <heisenberg:labeled-ricin key="pojo">
                <heisenberg:ricin microgramsPerKilo="22">
                    <heisenberg:destination victim="Lidia" address="Stevia coffe shop"/>
                </heisenberg:ricin>
            </heisenberg:labeled-ricin>
        </heisenberg:labeled-ricins>
    </heisenberg:config>

    <flow name="nestedPojo">
        <heisenberg:approve>
            <heisenberg:investment>
                <heisenberg:car-wash commercialName="A1" carsPerMinute="5">
                    <heisenberg:investment-spin-offs>
                        <heisenberg:investment-spin-off key="other-car-wash">
                            <heisenberg:car-wash commercialName="B1" valuation="10" carsPerMinute="1">
                                <heisenberg:discarded-investments>
                                    <heisenberg:car-dealer commercialName="Premium Cars" valuation="666" carStock="50">
                                        <heisenberg:investment-plan-b>
                                            <heisenberg:car-dealer commercialName="Not So Premium Cars" valuation="333"
                                                                   carStock="5"/>
                                        </heisenberg:investment-plan-b>
                                    </heisenberg:car-dealer>
                                </heisenberg:discarded-investments>
                            </heisenberg:car-wash>
                        </heisenberg:investment-spin-off>
                    </heisenberg:investment-spin-offs>
                </heisenberg:car-wash>
            </heisenberg:investment>
        </heisenberg:approve>
    </flow>

    <flow name="recursivePojo">
        <heisenberg:approve>
            <heisenberg:recursive-pojo>
                <heisenberg:childs>
                    <heisenberg:recursive-pojo>
                        <heisenberg:next>
                            <heisenberg:mapped-childs>
                                <heisenberg:mapped-child key="someKey"
                                                         value="#[{} as Object {class: 'new org.mule.test.heisenberg.extension.model.RecursivePojo'}]"/>
                            </heisenberg:mapped-childs>
                        </heisenberg:next>
                    </heisenberg:recursive-pojo>
                </heisenberg:childs>
                <heisenberg:mapped-childs>
                    <heisenberg:mapped-child key="otherKey"
                                             value="#[{} as Object {class: 'new org.mule.test.heisenberg.extension.model.RecursivePojo'}]"/>
                </heisenberg:mapped-childs>
            </heisenberg:recursive-pojo>
        </heisenberg:approve>
    </flow>

    <websocket:config name="myDynamicConfig">
        <websocket:connection>
            <websocket:server-settings listenerConfig="httpListenerConfig" listenerBasePath="/ws"/>
            <websocket:client-settings host="#[vars.host]" port="#[vars.port]" basePath="#[vars.basePath]"
                                       connectionIdleTimeout="1" followRedirects="#[true]"
                                       preserveHeadersCase="#[true]">
                <websocket:default-headers>
                    <websocket:header key="myCaseSensitiveHeader" value="#[vars.myCaseSensitiveHeader]"/>
                    <websocket:header key="#['defaultHeader']" value="#['default ' ++ 'header 1']"/>
                </websocket:default-headers>
                <websocket:default-query-params>
                    <websocket:query-param key="#[vars.queryParamKey]" value="#[123]"/>
                </websocket:default-query-params>
            </websocket:client-settings>
        </websocket:connection>
    </websocket:config>

    <petstore:config name="parameterGroupInlineShowInDslConfig" cashierName="Cashier name">
        <petstore:advanced-leash-configuration brand="acme" material="jute"/>
        <petstore:aquarium fishName="Bobby" frogName="Pepe"/>
        <petstore:connection username="john" password="doe"/>
        <petstore:pets>
            <petstore:pet value="Dog"/>
        </petstore:pets>
    </petstore:config>

    <flow name="groupInlineParametersWithSpacesShowInDslTransform">
        <petstore:get-cage config-ref="parameterGroupInlineShowInDslConfig"/>
    </flow>
    
    <flow name="schedulerFlowFixed">
        <scheduler>
            <scheduling-strategy>
                <fixed-frequency frequency="50" startDelay="20" timeUnit="SECONDS"/>
            </scheduling-strategy>
        </scheduler>
        <logger message="#[payload]"/>
    </flow>

    <flow name="dbSchedulerFlowCron">
        <db:listener table="person" config-ref="dbConfig" watermarkColumn="timestamp" idColumn="id">
            <scheduling-strategy>
                <cron expression="0,4,25,26,51 0 0 ? * * *"/>
            </scheduling-strategy>
        </db:listener>
        <logger message="#[payload]"/>
    </flow>
    
</mule>