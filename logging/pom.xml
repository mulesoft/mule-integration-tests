<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mule.tests</groupId>
        <artifactId>mule-extensions-integration-tests</artifactId>
        <version>4.9.4-rc1</version>
    </parent>
    <artifactId>mule-tests-logging</artifactId>
    <name>Logging Integration Tests</name>
    <description>Integration Tests for Mule logging</description>
    <packaging>jar</packaging>

    <properties>
        <surefire.args>
            -Xmx1024m
            -Xms256m
            -XX:+HeapDumpOnOutOfMemoryError
            ${surefire.args.base}
        </surefire.args>

        <javaModuleName>org.mule.test.integration.logging</javaModuleName>
        <formatterConfigPath>../formatter.xml</formatterConfigPath>
        <openTelemetryProtoVersion>1.5.0-alpha</openTelemetryProtoVersion>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <ibmIcu4jJarLoc>${com.ibm.icu:icu4j:jar}</ibmIcu4jJarLoc>
                        <graalVmSdkJarLoc>${org.graalvm.sdk:graal-sdk:jar}</graalVmSdkJarLoc>
                        <graalVmSdkCollectionsJarLoc>${org.graalvm.sdk:collections:jar}</graalVmSdkCollectionsJarLoc>
                        <graalVmSdkNativeImageJarLoc>${org.graalvm.sdk:nativeimage:jar}</graalVmSdkNativeImageJarLoc>
                        <graalVmTruffleJarLoc>${org.graalvm.truffle:truffle-api:jar}</graalVmTruffleJarLoc>
                        <graalVmPolyglotJarLoc>${org.graalvm.polyglot:polyglot:jar}</graalVmPolyglotJarLoc>
                        <graalVmJsJarLoc>${org.graalvm.js:js:jar}</graalVmJsJarLoc>
                        <graalVmJsScriptEngineJarLoc>${org.graalvm.js:js-scriptengine:jar}</graalVmJsScriptEngineJarLoc>

                        <apiAnnotationsLib>${org.mule.runtime:api-annotations:jar}</apiAnnotationsLib>
                    </systemPropertyVariables>
                    <classpathDependencyExcludes>
                        <!-- this is not needed on the test classpath, just to get the location -->
                        <classpathDependencyExclude>org.graalvm.js:js-scriptengine</classpathDependencyExclude>
                    </classpathDependencyExcludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.mule</groupId>
                <artifactId>mule-runtime-bom</artifactId>
                <version>${muleBomVersion}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-core</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-runner</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-functional</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-infrastructure</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-allure</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Include all Mule Modules -->
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-modules-all</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-module-service</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Mule Services -->

        <dependency>
            <groupId>org.mule.services</groupId>
            <artifactId>mule-service-weave</artifactId>
            <classifier>mule-service</classifier>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-dwb-api</artifactId> 
            <scope>provided</scope>         
        </dependency> 
        <dependency>
            <groupId>org.mule.services</groupId>
            <artifactId>mule-service-http</artifactId>
            <classifier>mule-service</classifier>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.services</groupId>
            <artifactId>mule-service-http</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.mule.services</groupId>
            <artifactId>mule-service-scheduler</artifactId>
            <classifier>mule-service</classifier>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-module-deployment-model-impl</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-trace</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-metrics</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-context</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.linecorp.armeria</groupId>
            <artifactId>armeria-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.linecorp.armeria</groupId>
            <artifactId>armeria-grpc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry.proto</groupId>
            <artifactId>opentelemetry-proto</artifactId>
            <version>${openTelemetryProtoVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js-scriptengine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
