<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <flow name="IdempotentSecureHashReceiverRouter">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(payload,'SHA-256')"/>
    </flow>

    <flow name="IdempotentReceiverRouter">
        <idempotent-message-validator idExpression="#[id + '-' + correlationId]"/>
    </flow>

    <flow name="IdempotentSecureHashReceiverRouterVar">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(variables.otherId,'SHA-256')"/>
        <set-payload value="Not duplicate" />
        <error-handler>
            <on-error-continue type="DUPLICATE_MESSAGE">
                <set-payload value="Duplicate" />
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="IdempotentReceiverRouterVar">
        <idempotent-message-validator idExpression="#[otherId]"/>
        <set-payload value="Not duplicate" />
        <error-handler>
            <on-error-continue type="DUPLICATE_MESSAGE">
                <set-payload value="Duplicate" />
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="nonExistentHashFlow">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(variables.otherId,'SOME-HASH-FUNCTION')"/>
    </flow>

    <flow name="md2HashFlow">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(variables.otherId,'MD2')"/>
    </flow>

    <flow name="md5HashFlow">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(variables.otherId,'MD5')"/>
    </flow>

    <flow name="sha1HashFlow">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(variables.otherId,'SHA-1')"/>
    </flow>

    <flow name="sha224HashFlow">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(variables.otherId,'SHA-224')"/>
    </flow>

    <flow name="sha256HashFlow">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(variables.otherId,'SHA-256')"/>
    </flow>

    <flow name="sha384HashFlow">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(variables.otherId,'SHA-384')"/>
    </flow>

    <flow name="sha512HashFlow">
        <idempotent-message-validator idExpression="%dw 2.0
            output text/plain
            import dw::Crypto
            ---
            Crypto::hashWith(variables.otherId,'SHA-512')"/>
    </flow>

</mule>
        
