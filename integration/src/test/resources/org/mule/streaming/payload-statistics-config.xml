<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:file="http://www.mulesoft.org/schema/mule/file"
      xmlns:marvel="http://www.mulesoft.org/schema/mule/marvel"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/marvel http://www.mulesoft.org/schema/mule/marvel/current/mule-marvel.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <http:listener-config name="simpleConf">
        <http:listener-connection host="localhost" port="${port}"/>
    </http:listener-config>

    <file:config name="file">
        <file:connection workingDir="${workingDir}" />
    </file:config>

    <flow name="bytesSource">
        <http:listener path="/" config-ref="simpleConf"/>
    
        <flow-ref name="consumeStream"/>
    </flow>

    <flow name="listOfMessagesSource" initialState="stopped">
        <marvel:cerebro-detect-new-mutants/>
    
        <flow-ref name="consumeStreams"/>

        <test:queue name="listOfMessagesSourceComplete"/>
    </flow>

    <flow name="listOfMessagesOperation">
        <marvel:adamantium-injectors injectorsToCreate="4" injectorLoad="${bytesSize}"/>
    
        <flow-ref name="consumeStreams"/>
    </flow>

    <flow name="passthroughOperation">
        <http:listener path="/passthrough" config-ref="simpleConf"/>

        <marvel:wounds-passthrough>
            <marvel:wounds>#[payload]</marvel:wounds>
        </marvel:wounds-passthrough>
    </flow>

    <flow name="pagesOfMessagesOperation">
        <file:list config-ref="file" directoryPath="#[vars.path]"/>
    
        <flow-ref name="consumeStreams"/>
    </flow>

    <flow name="pagedOperation">
        <marvel:get-relics/>
    
        <flow-ref name="consumeObjects"/>
    </flow>

    <flow name="streamOperation">
        <marvel:to-stream/>
    
        <flow-ref name="consumeStream"/>
    </flow>

    <flow name="iteratorOperation">
        <marvel:wolverine-blacklist/>
    
        <flow-ref name="consumeStreams"/>
    </flow>

<!--     Utility sub-flow's -->

    <sub-flow name="consumeStream">
        <file:write config-ref="file" path="#[random() as String]"/>
        
        <!-- Do a second iteration to make sure that operation output is only accounter for once in the statistics -->
        <file:write config-ref="file" path="#[random() as String]"/>
        <file:write config-ref="file" path="#[random() as String]"/>
    </sub-flow>

    <sub-flow name="consumeStreams">
        <foreach>
            <file:write config-ref="file" path="#[random() as String]"/>
        </foreach>
        
<!--         Do a second iteration to make sure that operation output is only accounter for once in the statistics -->
        <foreach>
            <file:write config-ref="file" path="#[random() as String]"/>
            <file:write config-ref="file" path="#[random() as String]"/>
        </foreach>
    </sub-flow>

    <sub-flow name="consumeObjects">
        <foreach>
            <logger message="foreach consumes objects form the list/iterator"/>
        </foreach>
        
<!--         Do a second iteration to make sure that operation output is only accounter for once in the statistics -->
        <foreach>
            <logger message="foreach consumes objects form the list/iterator"/>
        </foreach>
    </sub-flow>
</mule>
