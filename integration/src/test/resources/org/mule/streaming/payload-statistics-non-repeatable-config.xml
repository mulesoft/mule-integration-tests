<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:file="http://www.mulesoft.org/schema/mule/file"
      xmlns:marvel="http://www.mulesoft.org/schema/mule/marvel"
      xmlns:test-components="http://www.mulesoft.org/schema/mule/test-components"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/marvel http://www.mulesoft.org/schema/mule/marvel/current/mule-marvel.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/test-components http://www.mulesoft.org/schema/mule/test-components/current/mule-test-components.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <vm:config name="VM_Config">
        <vm:queues >
          <vm:queue queueName="Q1" queueType="PERSISTENT" />
        </vm:queues>
    </vm:config>
    
    <test-components:queue-config name="queue">
        <test-components:connection />
    </test-components:queue-config>
    <test-components:queue-config name="listOfMessagesSourceComplete">
        <test-components:connection />
    </test-components:queue-config>

    <http:listener-config name="simpleConf">
        <http:listener-connection host="localhost" port="${port}"/>
    </http:listener-config>

    <file:config name="file">
        <file:connection workingDir="${workingDir}" />
    </file:config>

    <flow name="bytesSource">
        <http:listener path="/" config-ref="simpleConf">
            <non-repeatable-stream />
        </http:listener>
        
        <logger level="WARN" message="#[payload]"/>
    
        <flow-ref name="consumeStreamsOnce"/>
    </flow>
    
    <flow name="bytesSourceThroughVM">
        <http:listener path="/throughVM" config-ref="simpleConf">
            <non-repeatable-stream />
        </http:listener>
        
        <vm:publish-consume queueName="Q1" config-ref="VM_Config" timeout="10"/>
    </flow>

    <flow name="listOfMessagesSource" initialState="stopped">
        <marvel:cerebro-detect-new-mutants>
            <!-- Returned value is already non-repeatable -->
        </marvel:cerebro-detect-new-mutants>
    
        <flow-ref name="consumeStreamsOnce"/>

        <test-components:queue-push config-ref="listOfMessagesSourceComplete"/>
    </flow>

    <flow name="listOfMessagesOperation">
        <marvel:adamantium-injectors injectorsToCreate="4" injectorLoad="${bytesSize}">
            <!-- Returned value is already non-repeatable -->
        </marvel:adamantium-injectors>
    
        <flow-ref name="consumeStreamsOnce"/>
    </flow>

    <flow name="passthroughOperation">
        <http:listener path="/passthrough" config-ref="simpleConf">
            <non-repeatable-stream />
        </http:listener>

        <marvel:wounds-passthrough>
            <marvel:wounds>#[payload]</marvel:wounds>
        </marvel:wounds-passthrough>
    </flow>

    <flow name="pagesOfMessagesOperation">
        <file:list config-ref="file" directoryPath="#[vars.path]">
            <non-repeatable-iterable />
        </file:list>
    
        <flow-ref name="consumeStreamsOnce"/>
    </flow>

    <flow name="pagedOperation">
        <marvel:get-relics>
            <non-repeatable-iterable />
        </marvel:get-relics>
    
        <flow-ref name="consumeStreamsOnce"/>
    </flow>

    <flow name="streamOperation">
        <marvel:to-stream>
            <non-repeatable-stream />
        </marvel:to-stream>
    
        <flow-ref name="consumeStreamOnce"/>
    </flow>

    <flow name="iteratorOperation">
        <marvel:wolverine-blacklist>
            <!-- Returned value is already non-repeatable -->
        </marvel:wolverine-blacklist>
    
        <flow-ref name="consumeStreamsOnce"/>
    </flow>

    <!-- Utility sub-flow's -->

    <sub-flow name="consumeStreamOnce">
        <test-components:queue-push config-ref="queue" consumeStream="true"/>
    </sub-flow>

    <sub-flow name="consumeStreamsOnce">
        <foreach>
            <test-components:queue-push config-ref="queue" consumeStream="true"/>
        </foreach>
    </sub-flow>
    
    <flow name="consumeStreamThroughVM">
        <vm:listener queueName="Q1" config-ref="VM_Config"/>

        <test:processor />
    </flow>
</mule>
