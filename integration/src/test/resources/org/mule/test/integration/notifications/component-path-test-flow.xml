<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:aggregators="http://www.mulesoft.org/schema/mule/aggregators"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
               http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
               http://www.mulesoft.org/schema/mule/aggregators http://www.mulesoft.org/schema/mule/aggregators/current/mule-aggregators.xsd">

    <configuration defaultErrorHandler-ref="defaultErrorHandler"/>

    <notifications>
        <notification event="MESSAGE-PROCESSOR"/>
    </notifications>

    <object name="notificationsStore" class="org.mule.test.core.context.notification.processors.ProcessorNotificationStore">
        <property key="logSingleNotification" value="true"/>
    </object>

    <notifications>
        <notification-listener ref="notificationsStore"/>
    </notifications>

    <flow name="flowWithSingleMp">
        <logger message="check"/>
    </flow>

    <flow name="flowWithMultipleMps">
        <logger message="check"/>
        <set-payload value="whatever"/>
        <object-to-byte-array-transformer/>
    </flow>

    <flow name="flowWithErrorHandler">
        <choice>
            <when expression="#[mel:executeFailingComponent == true]">
                <test:processor throwException="true" />
            </when>
            <when expression="#[mel:wrong expression]">
                <logger/>
            </when>
        </choice>
        <error-handler>
            <on-error-continue type="EXPRESSION">
                <validation:is-false expression="false"/>
            </on-error-continue>
            <on-error-propagate>
                <try>
                    <validation:is-true expression="true"/>
                </try>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="flowWithTryWithErrorHandler">
        <try>
            <test:processor throwException="true" />
            <error-handler>
                <on-error-continue>
                    <validation:is-false expression="false"/>
                    <validation:is-true expression="true"/>
                </on-error-continue>
            </error-handler>
        </try>
    </flow>

    <flow name="flowWithSource">
        <scheduler>
            <scheduling-strategy>
                <fixed-frequency frequency="10000" startDelay="10000000"/>
            </scheduling-strategy>
        </scheduler>
        <logger/>
    </flow>

    <flow name="flowWithSubflow">
        <logger/>
        <flow-ref name="subflow"/>
        <validation:is-false expression="false"/>
    </flow>

    <sub-flow name="subflow">
        <logger/>
        <validation:is-true expression="true"/>
    </sub-flow>

    <flow name="flowWithScatterGather">
        <scatter-gather>
            <route>
                <logger/>
            </route>
            <route>
                <validation:is-true expression="true"/>
            </route>
            <route>
                <validation:is-false expression="false"/>
            </route>
        </scatter-gather>
    </flow>

    <flow name="flowWithAsync">
        <async>
            <logger/>
            <validation:is-true expression="true"/>
        </async>
    </flow>

    <error-handler name="defaultErrorHandler">
        <on-error-continue>
            <logger/>
        </on-error-continue>
    </error-handler>

    <flow name="aggregatorWithOneRoute">
        <aggregators:size-based-aggregator name="oneRouteAggregator" maxSize="1">
            <aggregators:aggregation-complete>
                <logger/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="aggregatorWithTwoRoutes">
        <aggregators:size-based-aggregator name="twoRoutesAggregator" maxSize="2">
            <aggregators:incremental-aggregation>
                <logger/>
            </aggregators:incremental-aggregation>
            <aggregators:aggregation-complete>
                <logger/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="aggregatorWithTwoRoutesAndContent">
        <aggregators:size-based-aggregator name="twoRouteAggregatorAndContent" maxSize="2">
            <aggregators:content>#[payload]</aggregators:content>
            <aggregators:incremental-aggregation>
                <logger/>
            </aggregators:incremental-aggregation>
            <aggregators:aggregation-complete>
                <logger/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

</mule>
