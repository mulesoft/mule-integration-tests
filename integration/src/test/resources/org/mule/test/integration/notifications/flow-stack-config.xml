<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:sc="http://www.mulesoft.org/schema/mule/module-using-core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/module-using-core http://www.mulesoft.org/schema/mule/module-using-core/current/mule-module-using-core.xsd">

    <object name="flowStackAsserter" class="org.mule.tck.util.FlowTraceUtils$FlowStackAsserter" />
    <object name="flowStackAsserter2" class="org.mule.tck.util.FlowTraceUtils$FlowStackAsserter" />
    <object name="flowStackAsyncAsserter" class="org.mule.tck.util.FlowTraceUtils$FlowStackAsyncAsserter" />
    <object name="flowStackAsyncAsserter2" class="org.mule.tck.util.FlowTraceUtils$FlowStackAsyncAsserter" />

    <sub-flow name="subFlow">
        <processor ref="flowStackAsserter"/>
    </sub-flow>
    
    <flow name="flow">
        <processor ref="flowStackAsserter2"/>
    </flow>

    <flow name="flowStatic">
        <flow-ref name="flow"/>
    </flow>

    <flow name="subFlowStatic">
        <flow-ref name="subFlow"/>
    </flow>

    <flow name="flowDynamic">
        <flow-ref name="#['flow']"/>
    </flow>

    <flow name="subFlowDynamic">
        <flow-ref name="#['subFlow']"/>
    </flow>

    <flow name="secondFlowStatic">
        <flow-ref name="flow"/>
        <flow-ref name="flow"/>
    </flow>

    <flow name="secondSubFlowStatic">
        <flow-ref name="subFlow"/>
        <flow-ref name="subFlow"/>
    </flow>

    <flow name="secondFlowDynamic">
        <flow-ref name="#['flow']"/>
        <flow-ref name="#['flow']"/>
    </flow>

    <flow name="secondSubFlowDynamic">
        <flow-ref name="#['subFlow']"/>
        <flow-ref name="#['subFlow']"/>
    </flow>

    <!-- Async -->
    
    <sub-flow name="subFlowInAsync">
        <processor ref="flowStackAsyncAsserter"/>
    </sub-flow>
    
    <flow name="flowInAsync">
        <processor ref="flowStackAsyncAsserter2"/>
    </flow>
    
    <flow name="flowStaticWithAsync">
        <async>
            <flow-ref name="flowInAsync"/>
        </async>
    </flow>

    <flow name="subFlowStaticWithAsync">
        <async>
            <flow-ref name="subFlowInAsync"/>
        </async>
    </flow>

    <flow name="flowDynamicWithAsync">
        <async>
            <flow-ref name="#['flowInAsync']"/>
        </async>
    </flow>

    <flow name="subFlowDynamicWithAsync">
        <async>
            <flow-ref name="#['subFlowInAsync']"/>
        </async>
    </flow>
    
    <!-- Choice -->
    
    <flow name="flowStaticWithChoice">
        <choice>
            <when expression="#[true]">
                <flow-ref name="flow"/>
            </when>
            <otherwise>
                <test:processor throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="subFlowStaticWithChoice">
        <choice>
            <when expression="#[true]">
                <flow-ref name="subFlow"/>
            </when>
            <otherwise>
                <test:processor throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="flowDynamicWithChoice">
        <choice>
            <when expression="#[true]">
                <flow-ref name="#['flow']"/>
            </when>
            <otherwise>
                <test:processor throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="subFlowDynamicWithChoice">
        <choice>
            <when expression="#[true]">
                <flow-ref name="#['subFlow']"/>
            </when>
            <otherwise>
                <test:processor throwException="true"/>
            </otherwise>
        </choice>
    </flow>
    
    <!-- Scatter Gather single -->
    
    <flow name="flowStaticWithScatterGather">
        <scatter-gather>
            <route>
                <test:processor/>
            </route>
            <route>
                <flow-ref name="flow"/>
            </route>
        </scatter-gather>
    </flow>

    <flow name="subFlowStaticWithScatterGather">
        <scatter-gather>
            <route>
                <test:processor/>
            </route>
            <route>
                <flow-ref name="subFlow"/>
            </route>
        </scatter-gather>
    </flow>

    <flow name="flowDynamicWithScatterGather">
        <scatter-gather>
            <route>
                <test:processor/>
            </route>
            <route>
                <flow-ref name="#['flow']"/>
            </route>
        </scatter-gather>
    </flow>

    <flow name="subFlowDynamicWithScatterGather">
        <scatter-gather>
            <route>
                <test:processor/>
            </route>
            <route>
                <flow-ref name="#['subFlow']"/>
            </route>
        </scatter-gather>
    </flow>
    
    <!-- Scatter Gather chain -->
    
    <flow name="flowStaticWithScatterGatherChain">
        <scatter-gather>
            <route>
                <test:processor/>
            </route>
            <route>
                <flow-ref name="flow"/>
            </route>
        </scatter-gather>
    </flow>

    <flow name="subFlowStaticWithScatterGatherChain">
        <scatter-gather>
            <route>
                <test:processor/>
            </route>
            <route>
                <flow-ref name="subFlow"/>
            </route>
        </scatter-gather>
    </flow>

    <flow name="flowDynamicWithScatterGatherChain">
        <scatter-gather>
            <route>
                <test:processor/>
            </route>
            <route>
                <flow-ref name="#['flow']"/>
            </route>
        </scatter-gather>
    </flow>

    <flow name="subFlowDynamicWithScatterGatherChain">
        <scatter-gather>
            <route>
                <test:processor/>
            </route>
            <route>
                <flow-ref name="#['subFlow']"/>
            </route>
        </scatter-gather>
    </flow>

    <!-- For Each -->

    <flow name="flowForEach">
        <foreach collection="#[['foo', 'bar']]">
            <test:processor/>
            <flow-ref name="flow"/>
        </foreach>
    </flow>

    <flow name="flowSplitAggregate">
        <split-aggregate>
            <collection>
                ['foo', 'bar']
            </collection>
            <test:processor/>
            <flow-ref name="flow"/>
        </split-aggregate>
    </flow>
    
    <!-- XML SDK -->

    <flow name="xmlSdkOperation">
        <sc:flow-stack-store />
    </flow>
    
    <flow name="xmlSdkOperationInSubflow">
        <flow-ref name="xmlSdkOperation"/>
    </flow>
    
    <flow name="xmlSdkOperationFailAfter">
        <sc:set-payload-hardcoded />
        <test:processor throwException="true"/>
        <error-handler>
            <on-error-continue>
                <flow-ref name="subFlow"/>
            </on-error-continue>
        </error-handler>
    </flow>
    
    <flow name="xmlSdkOperationFailAfterSubFlow">
        <flow-ref name="xmlSdkOperationFailAfter"/>
    </flow>

    <flow name="xmlSdkOperationAfter">
        <sc:set-payload-hardcoded />
        <flow-ref name="subFlow"/>
    </flow>
    
    <flow name="xmlSdkOperationError">
        <try>
            <sc:raise-error-op />
            <error-handler>
                <on-error-continue/>
            </error-handler>
        </try>
        <flow-ref name="subFlow"/>
    </flow>
    
    <flow name="xmlSdkOperationErrorInSubflow">
        <flow-ref name="xmlSdkOperationError"/>
    </flow>
    
</mule>
