<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">

    <object name="throw-exception" class="org.mule.test.integration.exceptions.ThrowExceptionProcessor"/>
    <object name="throw-error" class="org.mule.test.integration.exceptions.ErrorHandlerTestCase$ThrowErrorProcessor"/>

    <flow name="matchesHandlerUsingWhen" initialState="stopped">
        <test:processor/>
        <error-handler>
            <on-error-continue when="#[payload == 'groovy']">
                <set-payload value="#[payload ++ ' catch-6']"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="matchesHandlerUsingType" initialState="stopped">
        <flow-ref name="throw-exception"/>
        <error-handler>
            <on-error-continue type="TRANSFORMATION">
                <set-payload value="#[payload ++ ' transformation']"/>
            </on-error-continue>
            <on-error-continue type="EXPRESSION">
                <set-payload value="#[payload ++ ' expression']"/>
            </on-error-continue>
            <on-error-continue type="CONNECTIVITY">
                <set-payload value="#[payload ++ ' connectivity']"/>
            </on-error-continue>
            <on-error-continue type="ROUTING">
                <set-payload value="#[payload ++ ' routing']"/>
            </on-error-continue>
            <on-error-continue type="SECURITY">
                <set-payload value="#[payload ++ ' security']"/>
            </on-error-continue>
            <on-error-continue type="ANY">
                <set-payload value="#[payload ++ ' any']"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="propagatesCriticalErrors" initialState="stopped">
        <set-payload value="#[payload ++ ' critical']"/>
        <flow-ref name="throw-error"/>
        <error-handler>
            <on-error-continue type="ANY">
                <set-payload value="#[payload ++ ' nope']"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="propagatesErrorHandlingRoutingErrors" initialState="stopped">
        <flow-ref name="onErrorFails"/>
        <error-handler>
            <on-error-continue type="EXPRESSION">
                <set-payload value="#[payload ++ ' expression']"/>
            </on-error-continue>
            <on-error-continue type="ANY">
                <set-payload value="#[payload ++ ' any']"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="onErrorFails">
        <raise-error type="ROUTING"/>
        <error-handler>
            <on-error-propagate when="#[lookup('zaraza', payload)]">
                <set-payload value="#[payload ++ ' routing']"/>
            </on-error-propagate>
        </error-handler>
    </flow>

</mule>
