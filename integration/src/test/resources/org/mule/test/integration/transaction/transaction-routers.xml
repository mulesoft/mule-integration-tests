<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <vm:config name="VM_Config">
        <vm:queues >
            <vm:queue queueName="Q1" />
        </vm:queues>
    </vm:config>

    <flow name="txScatterGather">
        <try transactionalAction="ALWAYS_BEGIN">
            <set-payload value="not relevant"/>
            <scatter-gather>
                <route>
                    <set-payload value="apple"/>
                    <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
                </route>
                <route>
                    <set-payload value="banana"/>
                    <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
                </route>
                <route>
                    <set-payload value="orange"/>
                    <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
                </route>
            </scatter-gather>
        </try>
    </flow>

    <flow name="txScatterGatherWithErrors">
        <try transactionalAction="ALWAYS_BEGIN">
            <set-payload value="not relevant"/>
            <scatter-gather>
                <route>
                    <set-payload value="${firstValue}"/>
                    <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
                    <raise-error type="APP:SOME" description="Error with ${firstValue}"/>
                </route>
                <route>
                    <set-payload value="${otherValue}"/>
                    <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
                </route>
            </scatter-gather>
            <error-handler>
                <on-error-continue type="COMPOSITE_ROUTING">
                    <set-payload value="#[error.errorMessage.payload.failures['0'].description]"/>
                    <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
                    <set-payload value="#[error.errorMessage.payload.results['1'].payload]"/>
                    <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
                </on-error-continue>
            </error-handler>
        </try>
    </flow>

    <flow name="txUntilSuccessful">
        <try transactionalAction="ALWAYS_BEGIN">
            <set-payload value="${firstValue}"/>
            <until-successful maxRetries="2" millisBetweenRetries="100">
                <logger message="#[payload]"/>
                <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
                <test:processor throwException="true"/>
            </until-successful>
            <error-handler>
                <on-error-continue>
                    <set-payload value="${otherValue}"/>
                    <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
                </on-error-continue>
            </error-handler>
        </try>
    </flow>

    <flow name="txAsync">
        <try transactionalAction="ALWAYS_BEGIN">
            <set-payload value="${firstValue}"/>
            <async>
                <logger message="#[payload]"/>
                <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptorAsync"/>
            </async>
            <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
        </try>
    </flow>


    <flow name="flowRefWithoutTx">
        <set-payload value="${firstValue}"/>
        <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
        <flow-ref name="flowWithTxSource"/>
    </flow>

    <flow name="flowRefWithTx">
        <try transactionalAction="ALWAYS_BEGIN">
            <set-payload value="${firstValue}"/>
            <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
            <flow-ref name="flowWithTxSource"/>
        </try>
    </flow>

    <flow name="flowWithTxSource">
        <vm:listener queueName="Q1" config-ref="VM_Config" transactionalAction="ALWAYS_BEGIN"/>
        <set-payload value="${otherValue}"/>
        <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
    </flow>

    <flow name="flowRefToSubFlowWithTx">
        <try transactionalAction="ALWAYS_BEGIN">
            <set-payload value="${firstValue}"/>
            <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
            <flow-ref name="someSubFlow"/>
        </try>
    </flow>

    <sub-flow name="someSubFlow">
        <set-payload value="${otherValue}"/>
        <custom-processor class="org.mule.test.integration.transaction.TransactionsWithRoutersTestCase$ThreadCaptor"/>
    </sub-flow>

</mule>