<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <http:listener-config name="listenerConfig">
        <http:listener-connection host="localhost" port="${port}"/>
    </http:listener-config>

    <object name="call" class="org.mule.test.integration.exceptions.OnErrorPropagateTestCase$CallMessageProcessor"/>
    <object name="error" class="org.mule.test.integration.exceptions.OnErrorPropagateTestCase$ErrorProcessor"/>
    
    <flow name="onErrorPropagateTypeMatch">
        <append-string-transformer message=" apt1"/>
        <flow-ref name="raiseRoutingErrorFlow"/>
        <error-handler>
            <on-error-propagate type="REDELIVERY_EXHAUSTED">
                <test:queue name="custom1"/>
            </on-error-propagate>
            <on-error-propagate type="ROUTING">
                <processor ref="call"/>
            </on-error-propagate>
            <on-error-propagate type="ANY">
                <test:queue name="any1"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="onErrorPropagateTypeMatchAny">
        <append-string-transformer message=" apt1"/>
        <test:processor throwException="true"/>
        <error-handler>
            <on-error-propagate type="REDELIVERY_EXHAUSTED">
                <test:queue name="custom2"/>
            </on-error-propagate>
            <on-error-propagate type="ANY">
                <processor ref="call"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="onErrorPropagateTypeMatchSeveral">
        <choice>
            <when expression="#[mel:payload]">
                <append-string-transformer message=" apt1"/>
                <flow-ref name="raiseRoutingErrorFlow"/>
            </when>
            <otherwise>
                <append-string-transformer message=" apt1"/>
                <expression-transformer expression="#[mel:payload.nope]"/>
            </otherwise>
        </choice>
        <error-handler>
            <on-error-propagate type="ROUTING,TRANSFORMATION">
                <processor ref="call"/>
            </on-error-propagate>
            <on-error-propagate type="ANY">
                <test:queue name="any"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="onErrorPropagateMessage">
        <append-string-transformer message=" apt1"/>
        <flow-ref name="raiseRoutingErrorFlow"/>
        <error-handler>
            <on-error-propagate>
                <set-payload value="propagated"/>
                <set-variable variableName="myVar" value="aValue"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="failingHandler">
        <test:processor throwException="true"/>
        <error-handler>
            <on-error-propagate>
                <processor ref="error"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="sourceResponseErrorHandler">
        <http:listener path="sourceError" config-ref="listenerConfig">
            <http:response statusCode="#['notANumber']"/>
        </http:listener>
        <append-string-transformer message=" hey"/>
        <error-handler>
            <on-error-propagate>
                <test:queue name="out"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="raiseRoutingErrorFlow">
        <raise-error type="ROUTING" description="This is a routing error."/>
    </flow>

</mule>
