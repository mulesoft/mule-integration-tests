<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:test="http://www.mulesoft.org/schema/mule/test"
    xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xmlns:heisenberg="http://www.mulesoft.org/schema/mule/heisenberg"
    xmlns:sc="http://www.mulesoft.org/schema/mule/module-using-core"
    xmlns:sc-using-sc="http://www.mulesoft.org/schema/mule/module-using-sc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
               http://www.mulesoft.org/schema/mule/heisenberg http://www.mulesoft.org/schema/mule/heisenberg/current/mule-heisenberg.xsd
               http://www.mulesoft.org/schema/mule/module-using-core http://www.mulesoft.org/schema/mule/module-using-core/current/mule-module-using-core.xsd
               http://www.mulesoft.org/schema/mule/module-using-sc http://www.mulesoft.org/schema/mule/module-using-sc/current/mule-module-using-sc.xsd">

    <configuration defaultErrorHandler-ref="globalErrorHandler" />

    <error-handler name="globalErrorHandler">
        <on-error-propagate>
            <logger message="error handled globally"/>
        </on-error-propagate>
    </error-handler>

    <http:request-config name="HTTP_Request_configuration"/>

    <heisenberg:config name="heisenberg" cancer="true" money="1000000" finalHealth="CANCER">
        <heisenberg:enemies>
            <heisenberg:enemy value="Gustavo Fring" />
            <heisenberg:enemy value="Hank" />
        </heisenberg:enemies>
        <heisenberg:monthly-incomes>
            <heisenberg:monthly-income value="12000" />
            <heisenberg:monthly-income value="500" />
        </heisenberg:monthly-incomes>
        <heisenberg:known-addresses>
            <heisenberg:known-address value="one address" />
        </heisenberg:known-addresses>
    </heisenberg:config>

    <flow name="injectionInterceptionTest">
        <logger />
        <flow-ref name="anotherFlow" />
    </flow>

    <flow name="anotherFlow">
        <splitter expression="#[payload]" />
    </flow>

    <flow name="killFromPayload">
        <heisenberg:kill goodbyeMessage="#[vars.goodbye]" />
    </flow>

    <flow name="killWithCustomMessage">
        <heisenberg:kill-with-custom-message victim="T-1000" goodbyeMessage="#[vars.goodbye]" />
    </flow>

    <flow name="die">
        <heisenberg:die config-ref="heisenberg" />
    </flow>

    <flow name="callSaul">
        <heisenberg:call-saul config-ref="heisenberg" />
    </flow>

    <flow name="callGusFring">
        <heisenberg:call-gus-fring />
    </flow>

    <flow name="executeKillWithClient">
        <heisenberg:execute-remote-kill extension="HTTP" configName="HTTP_Request_configuration" operation="request" >
            <heisenberg:parameters>#[{'url': 'https://httpbin.org/status/200'}]</heisenberg:parameters>
        </heisenberg:execute-remote-kill>
    </flow>

    <flow name="flowFailingOperation">
        <heisenberg:cure-cancer />
    </flow>

    <flow name="flowUnknownStatusCodeHttpRequest">
        <http:request method="GET" config-ref="HTTP_Request_configuration" url="https://httpbin.org/status/418"/>
    </flow>

    <flow name="loggerWithTemplate">
        <logger message="Logging #[vars.v1]"/>
    </flow>


    <flow name="expressionsInInterception">
        <logger />
    </flow>

    <flow name="scEchoOperationFlowRef">
        <flow-ref name="scEchoOperation"/>
    </flow>

    <flow name="scOperation">
        <sc:set-payload-hardcoded />
    </flow>

    <flow name="scEchoOperation">
        <sc:echo-set-payload echoMessage="#[vars.variable]" />
    </flow>

    <flow name="scUsingScOperation">
        <sc-using-sc:proxy-set-payload-hardcoded />
    </flow>

    <flow name="scFailingOperation">
        <sc:raise-error-op/>
    </flow>

    <flow name="scFailingOperationFlowRef">
        <flow-ref name="scFailingOperation"/>
    </flow>

    <flow name="flowFailing">
        <test:processor throwException="true"/>
    </flow>

    <flow name="flowRaise">
        <raise-error type="MULE:CONNECTIVITY" description="Expected error" />
    </flow>

    <flow name="flowFailingWithErrorHandler">
        <test:processor throwException="true"/>
        <error-handler>
            <on-error-propagate>
                <logger message="error handled for flow"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="flowWithFailingFlowRef">
        <flow-ref name="flowFailing" />
    </flow>

    <flow name="flowWithFailingSubFlowRef">
        <flow-ref name="failing-sub-flow" />
    </flow>

    <sub-flow name="failing-sub-flow">
        <test:processor throwException="true"/>
    </sub-flow>

</mule>
