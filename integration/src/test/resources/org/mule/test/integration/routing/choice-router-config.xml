<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <flow name="flow">
        <choice>
            <when expression="#[payload == 'A']">
                <test:invocation-counter name="whenRouteCounter"/>
            </when>
        </choice>
        <test:invocation-counter name="afterRouteMpCounter"/>
    </flow>

    <flow name="otherwise">
        <choice>
            <when expression="#[payload == 'A']">
                <test:invocation-counter name="routeCounter"/>
            </when>
            <otherwise>
                <test:invocation-counter name="otherwiseCounter"/>
            </otherwise>
        </choice>
        <test:invocation-counter name="afterCounter"/>
    </flow>

    <flow name="multiple">
        <choice>
            <when expression="#[payload == 'test']">
                <test:invocation-counter name="first"/>
            </when>
            <when expression="#[payload == 'test']">
                <test:invocation-counter name="second"/>
            </when>
            <otherwise>
                <test:invocation-counter name="default"/>
            </otherwise>
        </choice>
        <test:invocation-counter name="after"/>
    </flow>

    <flow name="error-handler">
        <choice>
            <when expression="#[true]">
                <test:throw exception="java.io.IOException" error="CONNECTIVITY"/>
            </when>
        </choice>
        <error-handler>
            <on-error-continue type="CONNECTIVITY">
                <set-payload value="handled"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="try-error-handler">
        <try>
            <choice>
                <when expression="#[true]">
                    <test:throw exception="java.io.IOException" error="CONNECTIVITY"/>
                </when>
            </choice>
            <error-handler>
                <on-error-continue type="CONNECTIVITY">
                    <set-payload value="handled"/>
                </on-error-continue>
            </error-handler>
        </try>
        <set-payload value="#[payload ++ ' after try']"/>
    </flow>

    <flow name="expression">
        <choice>
            <when expression="#[wat]">
                <set-payload value="You can't touch this!"/>
            </when>
        </choice>
        <error-handler>
            <on-error-continue type="EXPRESSION">
                <set-payload value="handled"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="try-expression">
        <try>
            <choice>
                <when expression="#[wat]">
                    <set-payload value="You can't touch this!"/>
                </when>
            </choice>
            <error-handler>
                <on-error-continue type="EXPRESSION">
                    <set-payload value="handled"/>
                </on-error-continue>
            </error-handler>
        </try>
        <set-payload value="#[payload ++ ' after try']"/>
    </flow>

    <flow name="txNonBlocking">
        <try transactionalAction="ALWAYS_BEGIN">
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
            <choice>
                <when expression="#[payload == 'nonBlocking']">
                    <test:non-blocking-processor />
                    <test:assert expression="#[java!org::mule::runtime::core::api::transaction::TransactionCoordination::isTransactionActive()]"/>
                    <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
                </when>
            </choice>
            <test:assert expression="#[java!org::mule::runtime::core::api::transaction::TransactionCoordination::isTransactionActive()]"/>
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
        </try>
        <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
    </flow>

    <flow name="txCpuIntensive">
        <try transactionalAction="ALWAYS_BEGIN">
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
            <choice>
                <when expression="#[payload == 'cpuIntensive']">
                    <test:processor processingType="CPU_INTENSIVE"/>
                    <test:assert expression="#[java!org::mule::runtime::core::api::transaction::TransactionCoordination::isTransactionActive()]"/>
                    <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
                </when>
            </choice>
            <test:assert expression="#[java!org::mule::runtime::core::api::transaction::TransactionCoordination::isTransactionActive()]"/>
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
        </try>
        <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
    </flow>

    <flow name="txBlocking">
        <try transactionalAction="ALWAYS_BEGIN">
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
            <choice>
                <when expression="#[payload == 'blocking']">
                    <test:processor processingType="BLOCKING"/>
                    <test:assert expression="#[java!org::mule::runtime::core::api::transaction::TransactionCoordination::isTransactionActive()]"/>
                    <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
                </when>
            </choice>
            <test:assert expression="#[java!org::mule::runtime::core::api::transaction::TransactionCoordination::isTransactionActive()]"/>
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
        </try>
        <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
    </flow>

    <flow name="txOtherwise">
        <try transactionalAction="ALWAYS_BEGIN">
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
            <choice>
                <when expression="#[payload == 'nonBlocking']">
                    <test:non-blocking-processor />
                </when>
                <otherwise>
                    <test:assert expression="#[java!org::mule::runtime::core::api::transaction::TransactionCoordination::isTransactionActive()]"/>
                    <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
                </otherwise>
            </choice>
            <test:assert expression="#[java!org::mule::runtime::core::api::transaction::TransactionCoordination::isTransactionActive()]"/>
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
        </try>
        <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
    </flow>

    <flow name="txNoOtherwise">
        <try transactionalAction="ALWAYS_BEGIN">
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
            <choice>
                <when expression="#[payload == 'nonBlocking']">
                    <test:non-blocking-processor />
                </when>
            </choice>
            <test:assert expression="#[java!org::mule::runtime::core::api::transaction::TransactionCoordination::isTransactionActive()]"/>
            <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
        </try>
        <custom-processor class="org.mule.test.integration.routing.ChoiceRouterTestCase$ThreadCaptor" />
    </flow>

</mule>
