<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <http:listener-config name="listenerConfig">
        <http:listener-connection host="localhost" port="${port}"/>
    </http:listener-config>
    <http:request-config name="requestConfig">
        <http:request-connection host="localhost" port="${port}"/>
    </http:request-config>

    <flow name="flow1">
        <flow-ref name="sub-flow" />
        <flow-ref name="sub-flow" />
    </flow>

    <sub-flow name="sub-flow">
        <append-string-transformer message="1" />
        <append-string-transformer message="2" />
        <flow-ref name="composite1" />

        <append-string-transformer message="a" />
        <append-string-transformer message="b" />
        <append-string-transformer message="c" />
        <append-string-transformer message="3" />

    </sub-flow>

    <sub-flow name="composite1">

        <append-string-transformer message="x" />
        <append-string-transformer message="y" />
        <append-string-transformer message="z" />
    </sub-flow>

    <!-- 'Target' tests -->
    <flow name="targetToFlow">
        <flow-ref name="nestedTargetFlow" target="flowRefResult" targetValue="#[payload[0]]"/>
    </flow>

    <flow name="nestedTargetFlow">
        <flow-ref name="nestedTargetSubFlow"/>
    </flow>

    <flow name="targetToSubFlow">
        <flow-ref name="nestedTargetSubFlow" target="flowRefResult" targetValue="#[payload[0]]"/>
    </flow>
    
    <sub-flow name="nestedTargetSubFlow">
        <set-payload value="#[['result']]"/>
    </sub-flow>
    <!-- End 'Target' tests -->

    <flow name="flow2">
        <flow-ref name="#['sub-flow-' ++ vars.letter]" />
    </flow>

    <sub-flow name="sub-flow-A">
        <append-string-transformer message="A" />
    </sub-flow>

    <sub-flow name="sub-flow-B">
        <append-string-transformer message="B" />
    </sub-flow>

    <sub-flow name="sub-flow-C">
        <choice>
            <when expression="#[true]">
                <append-string-transformer message="A" />
            </when>
            <otherwise>
                <append-string-transformer message="B" />
            </otherwise>
        </choice>
    </sub-flow>

    <sub-flow name="sub-flow-SG">
        <scatter-gather>
            <route>
                <append-string-transformer message="A" />
            </route>
            <route>
                <append-string-transformer message="B" />
            </route>
        </scatter-gather>
    </sub-flow>

    <flow name="httpEcho">
        <http:listener config-ref="listenerConfig" path="echo"/>
        <logger/>
    </flow>

    <flow name="flowRefFlowErrorNotifications">
        <flow-ref name="errorFlow"/>
    </flow>

    <flow name="errorFlow">
        <test:processor throwException="true" exceptionToThrow="java.lang.IllegalStateException"/>
    </flow>

    <flow name="flowRefSubFlowErrorNotifications">
        <flow-ref name="errorSubFlow"/>
    </flow>

    <sub-flow name="errorSubFlow">
        <test:processor throwException="true" exceptionToThrow="java.lang.IllegalStateException" />
    </sub-flow>

    <!-- Infinite recursion handling -->

    <flow name="recursiveCaller">
        <set-variable variableName="level" value="#[0]" />
        <flow-ref name="recursive"/>
    </flow>
    <flow name="recursive">
        <set-variable variableName="level" value="#[vars.level + 1]" />
        <flow-ref name="recursive"/>
    </flow>

    <flow name="recursiveDynamicCaller">
        <set-variable variableName="level" value="#[0]" />
        <flow-ref name="recursiveDynamic"/>
    </flow>
    <flow name="recursiveDynamic">
        <set-variable variableName="level" value="#[vars.level + 1]" />
        <flow-ref name="#['recursiveDynamic']"/>
    </flow>

    <flow name="recursiveSubFlowCaller">
        <set-variable variableName="level" value="#[0]" />
        <flow-ref name="recursiveSubFlow"/>
    </flow>
    <sub-flow name="recursiveSubFlow">
        <set-variable variableName="level" value="#[vars.level + 1]" />
        <flow-ref name="recursiveSubFlow"/>
    </sub-flow>

    <flow name="recursiveSubFlowDynamicCaller">
        <set-variable variableName="level" value="#[0]" />
        <flow-ref name="recursiveDynamicSubFlow"/>
    </flow>
    <sub-flow name="recursiveDynamicSubFlow">
        <set-variable variableName="level" value="#[vars.level + 1]" />
        <flow-ref name="#['recursiveDynamicSubFlow']"/>
    </sub-flow>

</mule>
